grafy mozem reprezentovat ako
1) MATICU SUSEDNOSTI
x	A	B	C	D
A	0	1	1	1
B	1	0	1	0
C	1	1	0	1
D	1	0	1	0

[[0, 1, 1, 1], [1, 0, 1, 0], [1, 1, 0, 1], [1, 0, 1, 0]]

2) ZOZNAM SUSEDOV
pomocou zoznamu:
# vrcholy jsou seřazeny abecedně (A = 0, B = 1, C = 2, D = 3)
graph = [[1, 2, 3], [0, 2], [0, 1, 3], [0, 2]]

pomocou slovniku:
graph = {
    'A': ['B', 'C', 'D'],
    'B': ['A', 'C'],
    'C': ['A', 'B', 'D'],
    'D': ['A', 'C']
}


KOSTRA GRAFU:
kostra je podgraf, ktory ziskame postupnym rusenim takych hran, ktorych odstranenim sa nenarusi suvilost grafu. Hned ako uz neexistuje ziadna hrana, ktoru by sme mohli odstranit, ziskany graf je kostrou povodoneho grafu.
TVORBA KOSTRY:
z povodneho grafu si nechame len vrcholy a jednotlive hrany vkladame do grafu. po kazdom vlozeni checkneme, ci sa nevytvoril cyklus. Ak ano, hrany sa zbavime.
TVORBA MINIMALOVEJ KOSTRY - KRUSKALOV ALG
1. hrany grafu zoradime podla dlzky vzostupne
2. vyberieme najkratsiu dlzku, ak netvori cyklus s uz vybratymi hranami, vlozime ju do kostry, ak cyklus vytvori, zbavime sa jej
3. druhy krok oprakujeme, dokym pocet hran kostry nie je V - 1 alebo nevycerpame vsetky hrany grafu G